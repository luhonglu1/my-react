{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\my-react\\\\my-react\\\\src\\\\components\\\\Movies.jsx\";\nimport React, { Component } from 'react';\nimport Pagination from './common/pagination';\nimport ListGroup from './common/listGroup';\nimport MoviesTable from './moviesTable';\nimport { getMovies } from '../services/fakeMovieService.js';\nimport { getGenres } from '../services/fakeGenreService.js';\nimport { paginate } from './utils/pagination.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      // 电影列表\n      genres: [],\n      // 分类列表\n      pageSize: 4,\n      // 分页规格\n      currentPage: 1 // 当前页\n      // selectedGenre: {}, // 当前分类\n\n    };\n\n    this.handleDelete = movie => {\n      console.log(movie);\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: 'All Genres'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      genres,\n      selectedGenre\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }, this);\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: genres,\n          selectItem: selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filtered.length, \" movies in the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["D:/demo/my-react/my-react/src/components/Movies.jsx"],"names":["React","Component","Pagination","ListGroup","MoviesTable","getMovies","getGenres","paginate","Movies","state","movies","genres","pageSize","currentPage","handleDelete","movie","console","log","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","componentDidMount","name","render","length","count","allMovies","filtered"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Pagination from './common/pagination'\r\nimport ListGroup from './common/listGroup'\r\nimport MoviesTable from './moviesTable'\r\nimport { getMovies } from '../services/fakeMovieService.js'\r\nimport { getGenres } from '../services/fakeGenreService.js'\r\nimport { paginate } from './utils/pagination.js'\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [], // 电影列表\r\n    genres: [], // 分类列表\r\n    pageSize: 4, // 分页规格\r\n    currentPage: 1, // 当前页\r\n    // selectedGenre: {}, // 当前分类\r\n  }\r\n\r\n  componentDidMount() {\r\n    const genres = [{ name: 'All Genres' }, ...getGenres()]\r\n    this.setState({ movies: getMovies(), genres })\r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    console.log(movie)\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id)\r\n    this.setState({ movies })\r\n  }\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies]\r\n    const index = movies.indexOf(movie)\r\n    movies[index] = { ...movies[index] }\r\n    movies[index].liked = !movies[index].liked\r\n    this.setState({\r\n      movies,\r\n    })\r\n  }\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page })\r\n  }\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 })\r\n  }\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      movies: allMovies,\r\n      genres,\r\n      selectedGenre,\r\n    } = this.state\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>\r\n\r\n    const filtered =\r\n      selectedGenre && selectedGenre._id\r\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\r\n        : allMovies\r\n\r\n    const movies = paginate(filtered, currentPage, pageSize)\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={genres}\r\n            selectItem={selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          ></ListGroup>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <p>Showing {filtered.length} movies in the database.</p>\r\n          <MoviesTable></MoviesTable>\r\n          <Pagination\r\n            itemsCount={filtered.length}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          ></Pagination>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movies\r\n"]},"metadata":{},"sourceType":"module"}